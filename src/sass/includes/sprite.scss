/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;

At the bottom of this section, we provide information about the spritesheet itself
$spritesheet: width height image $spritesheet-sprites;
*/
$spr-arrowup-name: 'spr-arrowup';
$spr-arrowup-x: 0px;
$spr-arrowup-y: 0px;
$spr-arrowup-offset-x: 0px;
$spr-arrowup-offset-y: 0px;
$spr-arrowup-width: 58px;
$spr-arrowup-height: 58px;
$spr-arrowup-total-width: 142px;
$spr-arrowup-total-height: 116px;
$spr-arrowup-image: '../img/sprite.png';
$spr-arrowup: (0px, 0px, 0px, 0px, 58px, 58px, 142px, 116px, '../img/sprite.png', 'spr-arrowup', );
$spr-arrup-name: 'spr-arrup';
$spr-arrup-x: 126px;
$spr-arrup-y: 0px;
$spr-arrup-offset-x: -126px;
$spr-arrup-offset-y: 0px;
$spr-arrup-width: 16px;
$spr-arrup-height: 54px;
$spr-arrup-total-width: 142px;
$spr-arrup-total-height: 116px;
$spr-arrup-image: '../img/sprite.png';
$spr-arrup: (126px, 0px, -126px, 0px, 16px, 54px, 142px, 116px, '../img/sprite.png', 'spr-arrup', );
$spr-m-off-name: 'spr-m-off';
$spr-m-off-x: 68px;
$spr-m-off-y: 0px;
$spr-m-off-offset-x: -68px;
$spr-m-off-offset-y: 0px;
$spr-m-off-width: 48px;
$spr-m-off-height: 48px;
$spr-m-off-total-width: 142px;
$spr-m-off-total-height: 116px;
$spr-m-off-image: '../img/sprite.png';
$spr-m-off: (68px, 0px, -68px, 0px, 48px, 48px, 142px, 116px, '../img/sprite.png', 'spr-m-off', );
$spr-m-on-name: 'spr-m-on';
$spr-m-on-x: 0px;
$spr-m-on-y: 68px;
$spr-m-on-offset-x: 0px;
$spr-m-on-offset-y: -68px;
$spr-m-on-width: 48px;
$spr-m-on-height: 48px;
$spr-m-on-total-width: 142px;
$spr-m-on-total-height: 116px;
$spr-m-on-image: '../img/sprite.png';
$spr-m-on: (0px, 68px, 0px, -68px, 48px, 48px, 142px, 116px, '../img/sprite.png', 'spr-m-on', );
$spritesheet-width: 142px;
$spritesheet-height: 116px;
$spritesheet-image: '../img/sprite.png';
$spritesheet-sprites: ($spr-arrowup, $spr-arrup, $spr-m-off, $spr-m-on, );
$spritesheet: (142px, 116px, '../img/sprite.png', $spritesheet-sprites, );

/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-width-2x($sprite) {
  width: _rem(nth($sprite, 5));
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-height-2x($sprite) {
  height: _rem(nth($sprite, 6));
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-position-2x($sprite) {
  $sprite-offset-x: _rem(nth($sprite, 3));
  $sprite-offset-y: _rem(nth($sprite, 4));
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

@mixin sprite-2x($sprite) {
  @include sprite-image($sprite);
  @include sprite-position-2x($sprite);
  @include sprite-width-2x($sprite);
  @include sprite-height-2x($sprite);
}


/*
The `sprites` mixin generates identical output to the CSS template
  but can be overridden inside of SCSS

@include sprites($spritesheet-sprites);
*/
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
@mixin sprites-2x($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite-2x($sprite);
    }
  }
}

.spr2x {
    display:inline-block;
    background-size: _rem($spritesheet-width);
    background-repeat:no-repeat;
}
